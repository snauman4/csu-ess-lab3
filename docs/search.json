[
  {
    "objectID": "Lab-03.html",
    "href": "Lab-03.html",
    "title": "Lab 3: COVID-19",
    "section": "",
    "text": "Question 1: Public Data\nReading the COVID-19 data:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(flextable)\n\n\nAttaching package: 'flextable'\n\nThe following object is masked from 'package:purrr':\n\n    compose\n\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\ncovid &lt;- read_csv(\"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\")\n\nRows: 2502832 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): county, state, fips\ndbl  (2): cases, deaths\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nQuestion 2: Daily Summary\n\nmy.date &lt;- as.Date(\"2022-02-01\")\nclass(my.date)\n\n[1] \"Date\"\n\nmy.state &lt;- \"Colorado\"\nclass(my.state)\n\n[1] \"character\"\n\nco_covid &lt;- covid %&gt;%\n  filter(state == \"Colorado\") %&gt;%\n  group_by(county) %&gt;%\n  arrange(date) %&gt;%\n  mutate(new_cases=cases-lag(cases),\n         new_deaths=deaths-lag(deaths)) %&gt;%\n  ungroup()\n\ntop_cumulative_cases &lt;- co_covid %&gt;%\n  filter(state == my.state, date == my.date) %&gt;%\n  select(Date = date, County = county, Cases = cases) %&gt;%\n  slice_max(Cases, n = 5)\n\nmost_new_cases &lt;- co_covid %&gt;%\n  filter(state == my.state, date == my.date) %&gt;%\n  select(Date = date, County = county, Cases = new_cases) %&gt;%\n  slice_max(Cases, n = 5)\n\nflextable(top_cumulative_cases) %&gt;%\n  set_caption(\"Top 5 Counties in Colorado with the Most Cumulative COVID-19 Cases\")\n\nDateCountyCases2022-02-01El Paso170,6732022-02-01Denver159,0222022-02-01Arapahoe144,2552022-02-01Adams126,7682022-02-01Jefferson113,240\n\nflextable(most_new_cases) %&gt;%\n  set_caption(\"Top 5 Counties in Colorado with the Most New COVID-19 Cases\")\n\nDateCountyCases2022-02-01El Paso6302022-02-01Arapahoe4012022-02-01Denver3892022-02-01Adams3262022-02-01Jefferson291\n\n\n\n\nQuestion 3: Normalizing Data\n3.2 In the data, there are 19 columns. The data.frame includes the columns of fips, state name, city name, 2021 pop estimate, 2021 population change, 2021 births, 2021 deaths, 2021 natural change, 2021 international migration, domestic migration 2021, net migration 2021, 2021 redsidual, GQ estimates 2021, 2021 Rbirths, 2021 rdeaths, 2021 rnatural change, 2021 rinternational migration, 2021 rdomestic migration, and 2021 r net migration.The FIP in the population url created matches the locations of the fips in the original COVID data that we have. The dimensions of the pop_url is 3144 x 19, which is smaller row wise, but contains more columns than the COVID data. The first three column observations are of type character, the next 10 are of type integer, and the last 6 are of type number.\n3.3 The range of populations seen in Colorado counties in 2021: 741 to 737287.\n3.4 Joining Pop and Colorado COVID data\n\nPer capita cumulative cases: 13.78259\nPer capita new cases: 0.05538724\nPer capita new deaths: 0.0003582305\n\n\npop_url &lt;- read.csv('https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv')\n\n# 3.1\npop_url &lt;- pop_url %&gt;%\n  filter(COUNTY != 0) %&gt;%\n  mutate(fips = paste0(sprintf(\"%02d\", STATE),\n                       sprintf(\"%03d\", COUNTY))) %&gt;%\n  select(fips, contains(\"NAME\"), contains(\"2021\"))\n\n# 3.2\nnames(pop_url)\n\n [1] \"fips\"                  \"STNAME\"                \"CTYNAME\"              \n [4] \"POPESTIMATE2021\"       \"NPOPCHG2021\"           \"BIRTHS2021\"           \n [7] \"DEATHS2021\"            \"NATURALCHG2021\"        \"INTERNATIONALMIG2021\" \n[10] \"DOMESTICMIG2021\"       \"NETMIG2021\"            \"RESIDUAL2021\"         \n[13] \"GQESTIMATES2021\"       \"RBIRTH2021\"            \"RDEATH2021\"           \n[16] \"RNATURALCHG2021\"       \"RINTERNATIONALMIG2021\" \"RDOMESTICMIG2021\"     \n[19] \"RNETMIG2021\"          \n\ndim(pop_url)\n\n[1] 3144   19\n\nnrow(pop_url)\n\n[1] 3144\n\nstr(pop_url)\n\n'data.frame':   3144 obs. of  19 variables:\n $ fips                 : chr  \"01001\" \"01003\" \"01005\" \"01007\" ...\n $ STNAME               : chr  \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ...\n $ CTYNAME              : chr  \"Autauga County\" \"Baldwin County\" \"Barbour County\" \"Bibb County\" ...\n $ POPESTIMATE2021      : int  59203 239439 24533 22359 59079 10143 18890 115678 34488 25074 ...\n $ NPOPCHG2021          : int  288 6212 -436 171 -28 -86 -135 -565 -163 105 ...\n $ BIRTHS2021           : int  686 2337 270 240 654 111 227 1250 392 254 ...\n $ DEATHS2021           : int  696 2948 390 325 875 160 297 1843 592 442 ...\n $ NATURALCHG2021       : int  -10 -611 -120 -85 -221 -49 -70 -593 -200 -188 ...\n $ INTERNATIONALMIG2021 : int  15 105 0 1 9 1 5 12 22 7 ...\n $ DOMESTICMIG2021      : int  242 6972 -313 254 141 -42 -75 -70 -6 284 ...\n $ NETMIG2021           : int  257 7077 -313 255 150 -41 -70 -58 16 291 ...\n $ RESIDUAL2021         : int  41 -254 -3 1 43 4 5 86 21 2 ...\n $ GQESTIMATES2021      : int  484 3351 2248 1994 616 1578 285 5407 856 278 ...\n $ RBIRTH2021           : num  11.62 9.89 10.91 10.78 11.07 ...\n $ RDEATH2021           : num  11.8 12.5 15.8 14.6 14.8 ...\n $ RNATURALCHG2021      : num  -0.169 -2.585 -4.848 -3.816 -3.74 ...\n $ RINTERNATIONALMIG2021: num  0.254 0.4443 0 0.0449 0.1523 ...\n $ RDOMESTICMIG2021     : num  4.1 29.5 -12.65 11.4 2.39 ...\n $ RNETMIG2021          : num  4.35 29.95 -12.65 11.45 2.54 ...\n\n# 3.3\nco_pop_data &lt;- pop_url %&gt;%\n  filter(str_starts(fips, \"08\"))\nrange(co_pop_data$POPESTIMATE2021)\n\n[1]    741 737287\n\nmerged_data &lt;- \n  left_join(co_covid, pop_url, by=\"fips\")\n\n# 3.4 \npop_url &lt;- pop_url %&gt;%\n  rename(state = STNAME)\n\nperCap = inner_join(co_covid,\n                    select(pop_url, fips, pop = POPESTIMATE2021),\n                    by = 'fips') %&gt;%\n  filter(date == my.date) %&gt;%\n  mutate(cumPerCap = cases / pop,\n         newCasesPerCap = new_cases / pop, \n         newDeathsPerCap = new_deaths / pop)\n\nperCapCompute &lt;- perCap %&gt;%\n  summarize(totalcumulativecases = sum(cumPerCap),\n            totalnewcases = sum(newCasesPerCap),\n            totalnewdeaths = sum(newDeathsPerCap))\n\n# 3.5\ntop_cumulative_cases_per_capita &lt;- perCap %&gt;%\n  arrange(desc(cumPerCap)) %&gt;%\n  select(county, cumPerCap) %&gt;%\n  slice(1:5)\n\nflextable(top_cumulative_cases_per_capita) %&gt;%\n  set_caption(\"Top 5 Counties in Colorado with the Most Cumulative COVID-19 Cases Per Capita on 2021-01-01\")\n\ncountycumPerCapCrowley0.5117698Bent0.4118749Pitkin0.3429659Lincoln0.3424082Logan0.3047701\n\ntop_per_capita_new_cases &lt;- perCap %&gt;%\n  arrange(desc(newCasesPerCap)) %&gt;%\n  select(county, newCasesPerCap) %&gt;%\n  slice(1:5) \n\nflextable(top_per_capita_new_cases) %&gt;%\n  set_caption(\"Top 5 Counties in Colorado with the Most New COVID-19 Cases Per Capita on 2021-01-01\")\n\ncountynewCasesPerCapCrowley0.009764603Bent0.004120622Sedgwick0.003869304Washington0.002875924Las Animas0.002651039\n\n\n\n\nQuestion 4: Rolling Thresholds\n\nlast_14_days &lt;- pop_url %&gt;%\n  inner_join(co_covid, by = \"fips\") %&gt;%\n  filter(between(date, my.date - 13, my.date)) %&gt;%\n  group_by(county) %&gt;%\n  summarize(recent_cases = sum((new_cases/POPESTIMATE2021) * 100000)) %&gt;% # ask if that is the correct calculation\n  ungroup()\n\nnew_cases_14days &lt;- last_14_days %&gt;%\n  arrange(desc(recent_cases)) %&gt;%\n  slice(1:5) %&gt;%\n  select(county, recent_cases) \n\nflextable(new_cases_14days) %&gt;%\n  set_caption(\"Top 5 Counties in Colorado with the Most New Cases Per 100,000 Residents in the Last 14 Days\")\n\ncountyrecent_casesCrowley3,923.278Lincoln3,599.488Alamosa3,594.909Mineral3,336.921Conejos3,152.203\n\n\n\n\nQuestion 5: Death Toll\n\nratio &lt;- co_covid %&gt;%\n  mutate(year = lubridate::year(date)) %&gt;%\n  filter(year == 2021) %&gt;%\n  group_by(fips) %&gt;%\n  summarize(totdeaths = sum(new_deaths, na.rm = TRUE)) %&gt;%\n  left_join(pop_url, by = c(\"fips\")) %&gt;%\n  mutate(death_ratio = 100 * (totdeaths / DEATHS2021)) %&gt;%\n  select(CTYNAME, totdeaths, DEATHS2021, death_ratio) %&gt;%\n  filter(death_ratio &gt; 20) \n\nggplot(ratio) +\n  geom_col(aes(x = death_ratio, y = CTYNAME), fill= \"red\") +\n  theme_bw() + \n  labs(\n    title = \"Colorado Counties Where COVID Deaths ≥ 20% of Total Deaths (2021)\",\n    x = \"County\",\n    y = \"Percentage of Total Deaths from COVID\")\n\n\n\n\n\n\n\n\n\n\nQuestion 6: Multi-state\n6.3\nCases Per Capita of Each State - New cases per capita in Colorado: 41.429217 - New cases per capita in Alabama: 14.491695 - New cases per capita in Ohio: 11.983607 - New cases per capita in New York: 6.435573\n7-day Rolling Mean of the New Cases Per Capita Counts - Alabama: 14.491695 - Colorado: 41.429217 - New York: 6.435573 - Ohio: 11.983607\n\n# 6.1 daily cases and 7-day rolling mean\nstate_covid &lt;- covid %&gt;%\n  group_by(date, state) %&gt;%\n  summarize(cases = sum(cases)) %&gt;%\n  filter(state %in% c(\"New York\", \"Colorado\", \"Alabama\", \"Ohio\")) %&gt;%\n  group_by(state) %&gt;%\n  mutate(NewCases = cases - lag(cases),\n         roll = zoo::rollmean(NewCases, k = 7, align = \"right\", fill = NA)) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n\n# 6.2 facet plot of daily cases and 7-day rollings mean\nggplot(state_covid, aes(x = date)) +\n  geom_col(aes(y = NewCases), fill = \"blue\", col = NA) +\n  geom_line(aes(y = roll), col = \"pink\", linewidth = 1) +\n  theme_bw() +\n  facet_wrap(~state, nrow = 2, scales = \"free_y\") +\n  labs(title = \"Cumulative COVID Cases\", x = \"Date\", y = \"Case Count\")\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_col()`).\n\n\nWarning: Removed 7 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n# 6.3 cases per capita of each state and 7-day rolling mean of new cases per capita counts\nstate_capita &lt;- inner_join(state_covid, pop_url, by = \"state\") %&gt;%\n  filter(date == my.date) %&gt;%\n  mutate(cumPerCap = cases / POPESTIMATE2021,\n         newCasesPerCap = NewCases / POPESTIMATE2021)\n\nWarning in inner_join(state_covid, pop_url, by = \"state\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1831 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nstate_capita_sums &lt;- state_capita %&gt;%\n  filter(state %in% c(\"Colorado\", \"Alabama\", \"Ohio\", \"New York\")) %&gt;%\n  group_by(state) %&gt;%\n  summarize(total_newCasesPerCap = sum(newCasesPerCap, na.rm = TRUE))\nprint(state_capita_sums)\n\n# A tibble: 4 × 2\n  state    total_newCasesPerCap\n  &lt;chr&gt;                   &lt;dbl&gt;\n1 Alabama                 14.5 \n2 Colorado                41.4 \n3 New York                 6.44\n4 Ohio                    12.0 \n\nperCapNewCasesRoll &lt;- state_capita %&gt;%\n  group_by(date, state) %&gt;%\n  filter(state %in% c(\"Colorado\", \"Alabama\", \"Ohio\", \"New York\")) %&gt;%\n  group_by(state) %&gt;%\n  mutate(newnewCasesPerCap = mean(sum(newCasesPerCap)),\n         roll = zoo::rollmean(newCasesPerCap, k = 7, align = \"right\", fill = NA)) %&gt;%\n  ungroup()\n\nperCapNewCasesRoll &lt;- perCapNewCasesRoll %&gt;%\n  select(-CTYNAME)\n\n# 6.4,5 7-day rolling averages with per capita data\npp = pop_url %&gt;%\n  group_by(state) %&gt;%\n  summarize(state_pop = sum(POPESTIMATE2021)) %&gt;%\n  inner_join(state_covid, by = c(\"state\")) %&gt;%\n  mutate(perCap = NewCases / state_pop) %&gt;%\n  group_by(state) %&gt;%\n  mutate(roll = zoo::rollmean(perCap, k = 7, align = \"right\", fill = NA)) %&gt;%\n  ungroup()\n\nggplot(pp, aes(x = date)) +\n  geom_line(aes(y = roll, col = state), size = 1) +\n  theme_linedraw() +\n  labs(title = \"Cumulative COVID-19 Cases\", x = \"Date\", y = \"Case Count\") \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 28 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n6.5 Influence scaling by population - Scaling by population makes the analysis more accurate by showing that larger states like New York and Ohio had less cases than Colorado and Alabama. The 7-day rolling mean also more accurately reflected public health impact based on per capita cases, showing how intense COVID affected different populations.\n\n\nQuestion 7: Space & Time\nThe weighted mean center of COVID-19 cases initially starts in the eastern U.S., reflecting early outbreaks in the Midwest and South, before shifting westward as cases surged in the Great Plains and Mountain West during later waves. The movement was driven by regional outbreaks, with early hotspots in urban areas such as Illinois and Missouri, and later surges in rural states like Nebraska, Kansas, and Colorado, reflecting the spread from high-density to lower-density regions over time.\n\nspatialdata = read_csv(\"https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/county-centroids.csv\") %&gt;%\n  inner_join(covid, by = \"fips\") %&gt;%\n  group_by(date) %&gt;%\n  summarize(Cases_WeightedMean_x = sum(LON*cases, na.rm = TRUE) / sum(cases, na.rm = TRUE),\n            Cases_WeightedMean_y = sum(LAT*cases, na.rm = TRUE) / sum(cases, na.rm = TRUE)) %&gt;%\n  arrange(date) %&gt;%\n  mutate(Month = format(date, \"%m\")) %&gt;%\n  mutate(d = 1:n())\n\nRows: 3221 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): fips\ndbl (2): LON, LAT\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nggplot(spatialdata) +\n  borders(\"state\", fill = \"gray90\", colour = \"white\") +\n  geom_point(aes(x = Cases_WeightedMean_x, y = Cases_WeightedMean_y),\n             color = \"red\", alpha = 0.25) +\n  labs(color = \"Month\",\n       size = \"Cases\",\n       x = \"Longitude\", y = \"Latitude\",\n       title = \"Weighted Center of COVID-19 Cases\") +\n  theme(legend.position = \"none\") \n\n\n\n\n\n\n\n\n\n\nQuestion 8: Cases vs. Deaths (Extra Credit)\nWhile the weighted mean center for cases is concentrated in the central U.S., the deaths plot presents a more scattered distribution across multiple states. The death-related weighted means appear less pronounced, with smaller points and no distinct outbreak clusters like those seen in the cases plot. This contrast highlights a difference between where high case counts occurred and where deaths were most prevalent, suggesting that while infections were more intense in the central U.S., fatalities were more widely spread across the country. This indicates that the impact of COVID-19 varied across regions, with differences in healthcare access, demographics, and response measures likely influencing case severity and mortality rates.\n\nQuestion8 = read_csv('https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/county-centroids.csv') %&gt;%\n  inner_join(covid) %&gt;%\n  group_by(date) %&gt;%\n  summarize(Cases_WeightedMean_x = sum(LON*cases) / sum(cases),\n            Cases_WeightedMean_y = sum(LAT*cases) / sum(cases),\n            cases = sum(cases), \n            Deaths_WeightedMean_x = sum(LON*deaths) / sum(deaths),\n            Deaths_WeightedMean_y = sum(LAT*deaths) / sum(deaths),\n            deaths = sum(deaths)) %&gt;%\n  arrange(date) %&gt;%\n  mutate(Month = format(date, \"%m\")) %&gt;%\n  mutate(d = 1:n())\n\nRows: 3221 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): fips\ndbl (2): LON, LAT\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nJoining with `by = join_by(fips)`\n\nlibrary(patchwork)\n\nls(Question8)\n\n[1] \"cases\"                 \"Cases_WeightedMean_x\"  \"Cases_WeightedMean_y\" \n[4] \"d\"                     \"date\"                  \"deaths\"               \n[7] \"Deaths_WeightedMean_x\" \"Deaths_WeightedMean_y\" \"Month\"                \n\nggplot(Question8) +\n  borders(\"state\", fill = \"gray90\", colour = \"white\") +\n  geom_point(aes(x = Cases_WeightedMean_x, y = Cases_WeightedMean_y), \n             color = \"red\", alpha = 0.25) +\n  labs(color = \"Month\",\n       size = \"cases\", \n       x = \"Longitude\", y = \"Latitude\", \n       title = \"Weighted Center of Covid-19 Cases\") +\n  theme(legend.position = \"none\") |\n  ggplot(Question8) +\n  borders(\"state\", fill = \"gray90\", colour = \"white\") +\n  geom_point(aes(x = Deaths_WeightedMean_x, y = Deaths_WeightedMean_y), \n             color = \"navy\", alpha = 0.25) +\n  labs(color = \"Month\",\n       size = \"deaths\", \n       x = \"Longitude\", y = \"Latitude\", \n       title = \"Weighted Center of Covid-19 Deaths\") +\n  theme(legend.position = \"none\")\n\nWarning: Removed 778 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  }
]